name: Run Symfony Tests with SQLite

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: sqlite3, pdo_sqlite, zip, mbstring

      - name: Configure DATABASE_URL for SQLite
        run: echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/test.db" >> $GITHUB_ENV

      - name: Create SQLite database directory
        run: mkdir -p var && touch var/test.db && chmod 777 var/test.db

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Configure JWT keys
        run: |
          mkdir -p config/jwt
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > config/jwt/private.pem
          echo "${{ secrets.JWT_PUBLIC_KEY }}" > config/jwt/public.pem
          chmod 600 config/jwt/private.pem
          chmod 644 config/jwt/public.pem

      - name: Debug JWT keys
        run: ls -lah config/jwt

      - name: Run migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test

      - name: Ensure Required Roles and Villes Exist
        run: |
          echo "üîß V√©rification et ajout des r√¥les et villes..."
          sqlite3 var/test.db "INSERT INTO role (id_role, nom_role) VALUES (1, 'admin') ON CONFLICT(id_role) DO NOTHING;"
          sqlite3 var/test.db "INSERT INTO role (id_role, nom_role) VALUES (2, 'utilisateur') ON CONFLICT(id_role) DO NOTHING;"
          sqlite3 var/test.db "INSERT INTO ville (id_ville, code_postale, nom_commune) VALUES (1, '75001', 'Paris') ON CONFLICT(id_ville) DO NOTHING;"
          echo "‚úÖ R√¥les et villes v√©rifi√©s et ajout√©s"

      - name: Debug Database Content
        run: |
          echo "üîç V√©rification des donn√©es en base"
          sqlite3 var/test.db "SELECT * FROM role;"
          sqlite3 var/test.db "SELECT * FROM ville;"
          sqlite3 var/test.db "SELECT * FROM utilisateur;"

      - name: Start Symfony Server (GitHub Actions)
        run: php -S 127.0.0.1:8000 -t public &

      - name: Wait for Server to Start
        run: sleep 5 # Permet de s'assurer que le serveur a d√©marr√©

      - name: R√©cup√©rer le Token JWT de jean.dupont@example.com
        run: |
          echo "üîë R√©cup√©ration du Token JWT pour jean.dupont@example.com"
          RESPONSE=$(curl -s -X POST http://127.0.0.1:8000/api/login_check -H "Content-Type: application/json" -d '{"email": "jean.dupont@example.com", "password": "password123"}')
          echo "R√©ponse JWT : $RESPONSE"
          TOKEN=$(echo $RESPONSE | jq -r '.token')
          if [ "$TOKEN" == "null" ] || [ -z "$TOKEN" ]; then
            echo "‚ùå Erreur : Impossible de r√©cup√©rer le Token JWT pour jean.dupont@example.com."
            exit 1
          fi
          echo "TOKEN_JWT=$TOKEN" >> $GITHUB_ENV
          echo "‚úÖ Token r√©cup√©r√© avec succ√®s"

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-text
