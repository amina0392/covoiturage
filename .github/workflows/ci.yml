name: Run Symfony Tests with SQLite

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: sqlite3, pdo_sqlite, zip, mbstring

      - name: Configure DATABASE_URL for SQLite
        run: echo "DATABASE_URL=sqlite:///%kernel.project_dir%/var/test.db" >> $GITHUB_ENV

      - name: Create SQLite database directory
        run: mkdir -p var && touch var/test.db && chmod 777 var/test.db

      - name: Install dependencies
        run: composer install --no-interaction --prefer-dist

      - name: Configure JWT keys
        run: |
          mkdir -p config/jwt
          echo "${{ secrets.JWT_PRIVATE_KEY }}" > config/jwt/private.pem
          echo "${{ secrets.JWT_PUBLIC_KEY }}" > config/jwt/public.pem
          chmod 600 config/jwt/private.pem
          chmod 644 config/jwt/public.pem

      - name: Remove old migrations
        run: rm -rf migrations/*

      - name: Create new migration
        run: php bin/console doctrine:migrations:diff --env=test || echo "No new migrations"

      - name: Run migrations
        run: php bin/console doctrine:migrations:migrate --no-interaction --env=test || echo "No migrations to apply"

      - name: Debug Database Content (Check Roles & Villes)
        run: |
          echo "üîç V√©rification des r√¥les et villes dans la base de donn√©es"
          sqlite3 var/test.db "SELECT * FROM role;"
          sqlite3 var/test.db "SELECT * FROM ville;"

      - name: Ensure Required Roles Exist
        run: |
          echo "üîß V√©rification et ajout des r√¥les..."
          sqlite3 var/test.db "INSERT INTO role (id_role, nom_role) VALUES (3, 'admin') ON CONFLICT(id_role) DO NOTHING;"
          sqlite3 var/test.db "INSERT INTO role (id_role, nom_role) VALUES (4, 'utilisateur') ON CONFLICT(id_role) DO NOTHING;"
          echo "‚úÖ R√¥les v√©rifi√©s et ajout√©s"

      - name: Ensure Required Villes Exist
        run: |
          echo "üîß V√©rification et ajout des villes..."
          sqlite3 var/test.db "INSERT INTO ville (id_ville, code_postale, nom_commune) VALUES (2, '75001', 'Paris') ON CONFLICT(id_ville) DO NOTHING;"
          echo "‚úÖ Villes v√©rifi√©es et ajout√©es"
          
      - name: Debug Database Content (Check Roles & Villes)
        run: |
          echo "üîç Contenu des r√¥les et villes apr√®s insertion"
          sqlite3 var/test.db "SELECT * FROM role;"
          sqlite3 var/test.db "SELECT * FROM ville;"

      - name: Load test data (fixtures)
        run: php bin/console doctrine:fixtures:load --no-interaction --env=test || echo "No fixtures available"

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --coverage-text
