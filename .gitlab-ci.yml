image: mwienk/docker-git-ftp

variables:
  APP_ENV: prod

stages:
#  - test
  - deploy
  - sonarqube-check
  - sonarqube-vulnerability-report


# Étape de test PHPUnit
#test:
#  stage: test
#  image: php:8.2
#  before_script:
#    - apt-get update && apt-get install -y unzip git libzip-dev libpq-dev
#    - docker-php-ext-install zip pdo pdo_mysql
#    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
#    - composer require --dev phpunit/phpunit
#  script:
#    - composer install --optimize-autoloader
#    - php vendor/bin/phpunit
#  only:
#    - main

# Étape de déploiement FTP
deploy:
  stage: deploy
  image: mwienk/docker-git-ftp
  only:
    - main
  script:
    - apt-get update -qq && apt-get install -y -qq lftp
    - lftp -c "set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; mirror -Rv ./ --ignore-time --parallel=10  --exclude .git/"
#  needs:
#    - test  # Assure que le test passe avant de déployer

sonarqube-check:
  stage: sonarqube-check
  image:
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=covoiturage&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check

   