stages:
    - sonarqube-check
    - sonarqube-vulnerability-report
    - deploy

sonarqube-check:
  stage: sonarqube-check
  image: 
    name: sonarsource/sonar-scanner-cli:5.0
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0"
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - echo "Nettoyage du dépôt Git..."
    - if [ -f ".git/shallow" ]; then git fetch --unshallow; fi
    - git reset --hard HEAD
    - git clean -fdx
    - sonar-scanner -X
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
    - feature/*
    - bugfix/*

sonarqube-vulnerability-report:
  stage: sonarqube-vulnerability-report
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=covoiturage&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - merge_requests
    - master
    - main
    - develop
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
deploy:
    stage: deploy
    only:
        - main
    script:
        # Installe lftp
        - apt-get update -qq && apt-get install -y -qq lftp


        # Déploie le contenu du dossier temporaire
        - lftp -c "set ftp:ssl-allow no; open -u $USERNAME,$PASSWORD $HOST; mirror -Rv ./ --ignore-time --parallel=10 --exclude .git/"
